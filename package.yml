name       : rust
version    : 1.38.0
release    : 56
source     :
    - https://static.rust-lang.org/dist/rustc-1.38.0-src.tar.xz : 3a7991aa4cb44ef941d71636e45a95468b520dc6fc7cf725364925bd3e3d3a34
license    :
    - Apache-2.0
    - MIT
summary    :
    - A fast and secure system programming language
    - ^cargo : The Rust build system
description:
    - Rust is a systems programming language that runs blazingly fast, prevents nearly all segfaults, and guarantees thread safety.
    - ^cargo : The Rust build system.
component  :
    - programming
    - ^cargo : programming.tools
patterns   :
    - ^cargo :
        - /usr/bin/cargo
        - /usr/share/bash-completion/completions/cargo
        - /usr/share/man/man1/cargo*
        - /usr/share/zsh/site-functions/_cargo
libsplit   : no
builddeps  :
    - pkgconfig(libgit2)
    - pkgconfig(libssh2)
    - cargo
    - fakeroot-32bit    # Tests
    - glibc-32bit-devel
    - libgcc-32bit
rundeps    :
    - ^cargo :
        - libgit2
        - libssh2
        - rust
setup      : |
    %patch -p1 < $pkgfiles/Set-correct-libdir-in-bootstrap.patch
    %patch -p1 src/bootstrap/native.rs $pkgfiles/Fix-building-1.35.0-with-internal-llvm.patch
    sed -e 's|PREFIX|%PREFIX%|g' \
        -e 's|LIBDIR|%libdir%|g' $pkgfiles/config.toml.in > config.toml
build      : |
    # Don't use system libgit2 for now: https://github.com/rust-lang/rust/issues/63476
    #export LIBGIT2_SYS_USE_PKG_CONFIG=1
    export LIBSSH2_SYS_USE_PKG_CONFIG=1

    # These env variables are for LLVM to be built correctly
    # since it sometimes fails on the build server
    unset LD_AS_NEEDED LDFLAGS
    export CFLAGS="-march=x86-64 -mtune=generic -O3 -fstack-protector -pipe"
    export CXXFLAGS="$CFLAGS"

    ./x.py build
    ./x.py build cargo
install    : |
    export DESTDIR=$installdir
    ./x.py install
    ./x.py install cargo
    install -dm00644 $installdir/usr/share/bash-completion/completions
    mv $installdir/etc/bash_completion.d/cargo $installdir/usr/share/bash-completion/completions/
    rm -rf $installdir/etc

    # Remove text files from libs (manifests, installation logs...)
    find $installdir/%libdir%/rustlib -maxdepth 1 -type f -delete

    # Remove license files and such
    find $installdir/usr/share/doc/rust \( -name '*LICENSE*' -o -name '*COPYRIGHT*' \) -delete
    rm $installdir/usr/share/doc/rust/{README.md,README.md.old}
check      : |
    # Some tests require targets we don't support, such as ARM.
    # For this reason we run only a small subset of the test suite.
    ./x.py test src/test/codegen
    ./x.py test src/test/compile-fail
    ./x.py test src/test/run-fail
